// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebDatLich.Data;

#nullable disable

namespace WebDatLich.Migrations
{
    [DbContext(typeof(CsdlDuLichContext))]
    partial class CsdlDuLichContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebDatLich.Data.Account", b =>
                {
                    b.Property<string>("Username")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("username");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customer_id");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("employee_id");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("role");

                    b.HasKey("Username")
                        .HasName("PK__Accounts__F3DBC57334CD2C4B");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("WebDatLich.Data.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("booking_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"));

                    b.Property<DateOnly?>("BookingDate")
                        .HasColumnType("date")
                        .HasColumnName("booking_date");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customer_id");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("total_price");

                    b.Property<int>("TourId")
                        .HasColumnType("int")
                        .HasColumnName("tour_id");

                    b.HasKey("BookingId")
                        .HasName("PK__Bookings__5DE3A5B1E7DB8E54");

                    b.HasIndex("CustomerId");

                    b.HasIndex("TourId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("WebDatLich.Data.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("customer_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("Address")
                        .HasColumnType("text")
                        .HasColumnName("address");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("full_name");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("phone_number");

                    b.HasKey("CustomerId")
                        .HasName("PK__Customer__CD65CB859277D034");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("WebDatLich.Data.Destination", b =>
                {
                    b.Property<int>("DestinationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("destination_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DestinationId"));

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("DestinationName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("destination_name");

                    b.HasKey("DestinationId")
                        .HasName("PK__Destinat__5501539108393012");

                    b.ToTable("Destinations");
                });

            modelBuilder.Entity("WebDatLich.Data.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("employee_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("full_name");

                    b.Property<DateOnly?>("HireDate")
                        .HasColumnType("date")
                        .HasColumnName("hire_date");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("phone_number");

                    b.Property<string>("Position")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("position");

                    b.HasKey("EmployeeId")
                        .HasName("PK__Employee__C52E0BA8EDF39BEC");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("WebDatLich.Data.Feedback", b =>
                {
                    b.Property<int>("FeedbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("feedback_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeedbackId"));

                    b.Property<string>("Comments")
                        .HasColumnType("text")
                        .HasColumnName("comments");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customer_id");

                    b.Property<int?>("Rating")
                        .HasColumnType("int")
                        .HasColumnName("rating");

                    b.Property<int>("TourId")
                        .HasColumnType("int")
                        .HasColumnName("tour_id");

                    b.HasKey("FeedbackId")
                        .HasName("PK__Feedback__7A6B2B8C16B8AD1F");

                    b.HasIndex("CustomerId");

                    b.HasIndex("TourId");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("WebDatLich.Data.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("payment_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("amount");

                    b.Property<int>("BookingId")
                        .HasColumnType("int")
                        .HasColumnName("booking_id");

                    b.Property<DateOnly?>("PaymentDate")
                        .HasColumnType("date")
                        .HasColumnName("payment_date");

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("payment_method");

                    b.HasKey("PaymentId")
                        .HasName("PK__Payments__ED1FC9EA1BC8DF3B");

                    b.HasIndex("BookingId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("WebDatLich.Data.Tour", b =>
                {
                    b.Property<int>("TourId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("tour_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TourId"));

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int>("DestinationId")
                        .HasColumnType("int")
                        .HasColumnName("destination_id");

                    b.Property<DateOnly?>("EndDay")
                        .HasColumnType("date")
                        .HasColumnName("end_day");

                    b.Property<int>("GuideId")
                        .HasColumnType("int")
                        .HasColumnName("guide_id");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("price");

                    b.Property<DateOnly?>("StartDay")
                        .HasColumnType("date")
                        .HasColumnName("start_day");

                    b.Property<string>("TourName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("tour_name");

                    b.HasKey("TourId")
                        .HasName("PK__Tours__4B16B9E668FB5C36");

                    b.HasIndex("DestinationId");

                    b.HasIndex("GuideId");

                    b.ToTable("Tours");
                });

            modelBuilder.Entity("WebDatLich.Data.TourGuide", b =>
                {
                    b.Property<int>("GuideId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("guide_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GuideId"));

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("employee_id");

                    b.Property<int?>("ExperienceYears")
                        .HasColumnType("int")
                        .HasColumnName("experience_years");

                    b.Property<string>("LanguageSpoken")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("language_spoken");

                    b.HasKey("GuideId")
                        .HasName("PK__TourGuid__04A822417F30DD0C");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.ToTable("TourGuides");
                });

            modelBuilder.Entity("WebDatLich.Data.Account", b =>
                {
                    b.HasOne("WebDatLich.Data.Customer", "Customer")
                        .WithMany("Accounts")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK__Accounts__custom__60A75C0F");

                    b.HasOne("WebDatLich.Data.Employee", "Employee")
                        .WithMany("Accounts")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK__Accounts__employ__619B8048");

                    b.Navigation("Customer");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("WebDatLich.Data.Booking", b =>
                {
                    b.HasOne("WebDatLich.Data.Customer", "Customer")
                        .WithMany("Bookings")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("FK__Bookings__custom__5629CD9C");

                    b.HasOne("WebDatLich.Data.Tour", "Tour")
                        .WithMany("Bookings")
                        .HasForeignKey("TourId")
                        .IsRequired()
                        .HasConstraintName("FK__Bookings__tour_i__571DF1D5");

                    b.Navigation("Customer");

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("WebDatLich.Data.Feedback", b =>
                {
                    b.HasOne("WebDatLich.Data.Customer", "Customer")
                        .WithMany("Feedbacks")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("FK__Feedbacks__custo__5CD6CB2B");

                    b.HasOne("WebDatLich.Data.Tour", "Tour")
                        .WithMany("Feedbacks")
                        .HasForeignKey("TourId")
                        .IsRequired()
                        .HasConstraintName("FK__Feedbacks__tour___5DCAEF64");

                    b.Navigation("Customer");

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("WebDatLich.Data.Payment", b =>
                {
                    b.HasOne("WebDatLich.Data.Booking", "Booking")
                        .WithMany("Payments")
                        .HasForeignKey("BookingId")
                        .IsRequired()
                        .HasConstraintName("FK__Payments__bookin__59FA5E80");

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("WebDatLich.Data.Tour", b =>
                {
                    b.HasOne("WebDatLich.Data.Destination", "Destination")
                        .WithMany("Tours")
                        .HasForeignKey("DestinationId")
                        .IsRequired()
                        .HasConstraintName("FK__Tours__destinati__5070F446");

                    b.HasOne("WebDatLich.Data.TourGuide", "Guide")
                        .WithMany("Tours")
                        .HasForeignKey("GuideId")
                        .IsRequired()
                        .HasConstraintName("FK__Tours__guide_id__5165187F");

                    b.Navigation("Destination");

                    b.Navigation("Guide");
                });

            modelBuilder.Entity("WebDatLich.Data.TourGuide", b =>
                {
                    b.HasOne("WebDatLich.Data.Employee", "Employee")
                        .WithOne("TourGuides")
                        .HasForeignKey("WebDatLich.Data.TourGuide", "EmployeeId")
                        .IsRequired()
                        .HasConstraintName("FK__TourGuide__emplo__4D94879B");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("WebDatLich.Data.Booking", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("WebDatLich.Data.Customer", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("Bookings");

                    b.Navigation("Feedbacks");
                });

            modelBuilder.Entity("WebDatLich.Data.Destination", b =>
                {
                    b.Navigation("Tours");
                });

            modelBuilder.Entity("WebDatLich.Data.Employee", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("TourGuides");
                });

            modelBuilder.Entity("WebDatLich.Data.Tour", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Feedbacks");
                });

            modelBuilder.Entity("WebDatLich.Data.TourGuide", b =>
                {
                    b.Navigation("Tours");
                });
#pragma warning restore 612, 618
        }
    }
}
